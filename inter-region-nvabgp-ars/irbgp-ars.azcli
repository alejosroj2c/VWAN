# Parameters (make changes based on your requirements)
region1=eastus
region2=westus
rg=lab-vwan-nvabgp
vwanname=vwan-nvabgp
hub1name=hub1
hub2name=hub2
username=azureuser
password="Msft123Msft123" #Please change your password
vmsize=Standard_DS1_v2

#Variables
mypip=$(curl -4 ifconfig.io -s)

# Creating rg
az network vnet create --address-prefixes 172.16.1.0/24 -n hub1-ars-vnet -g $rg -l $region1 --subnet-name RouteServerSubnet --subnet-prefixes 172.16.1.0/26 --output none 


#Add Route Server
az network public-ip create --resource-group $rg --name $hub1name-rs-pip --allocation-method Static --sku Standard --output none --location $region1 --only-show-errors
az network routeserver create --resource-group $rg --name $hub1name-rs \
--hosted-subnet $(az network vnet subnet show --resource-group $rg --vnet-name hub1-ars-vnet --name RouteServerSubnet --query id --out tsv) \
--public-ip-address $hub1name-rs-pip \
--location $region1 \
--output none


# VNET peering with spoke2, spoke5 and spoke6
echo Creating VNET peerings...
# vnet peering 
az network vnet peering create -g $rg -n hub1-ars-vnet-to-spoke2 --vnet-name hub1-ars-vnet --allow-vnet-access --allow-forwarded-traffic --remote-vnet $(az network vnet show -g $rg -n spoke2  --query id --out tsv) --output none
az network vnet peering create -g $rg -n spoke2-to-hub1-ars-vnet --vnet-name spoke2 --allow-vnet-access --allow-forwarded-traffic --remote-vnet $(az network vnet show -g $rg -n hub1-ars-vnet --query id --out tsv) --output none

az network vnet peering create -g $rg -n hub1-ars-vnet-to-spoke5 --vnet-name hub1-ars-vnet --allow-gateway-transit --allow-vnet-access --allow-forwarded-traffic --remote-vnet $(az network vnet show -g $rg -n spoke5 --query id --out tsv) --output none 
az network vnet peering create -g $rg -n spoke5-to-hub1-ars-vnet --vnet-name spoke5 --use-remote-gateways --allow-vnet-access --allow-forwarded-traffic --remote-vnet $(az network vnet show -g $rg -n hub1-ars-vnet  --query id --out tsv) --output none

az network vnet peering create -g $rg -n hub1-ars-vnet-to-spoke6 --vnet-name hub1-ars-vnet --allow-gateway-transit --allow-vnet-access --allow-forwarded-traffic --remote-vnet $(az network vnet show -g $rg -n spoke6 --query id --out tsv) --output none 
az network vnet peering create -g $rg -n spoke6-to-hub1-ars-vnet --vnet-name spoke6 --use-remote-gateways  --allow-vnet-access --allow-forwarded-traffic --remote-vnet $(az network vnet show -g $rg -n hub1-ars-vnet --query id --out tsv) --output none


# Build Route Server BGP Peering
# Deploy BGP endpoont (Make the changes based on your needs)
vnetname=spoke2 #Target NET
nvaintname=linux-nva1 #NVA instance name
subnetname=nvasubnet #Existing Subnet where NVA gets deployed
hubtopeer=$hub2name #Note: VNET has to be connected to the same hub.

#Specific NVA BGP settings
asn_quagga=65002 # Set ASN

az network routeserver peering create --resource-group $rg --routeserver $hub1name-rs --name $vnetname-$nvaintname --peer-asn $asn_quagga \
 --peer-ip $(az network nic show --name $vnetname-$nvaintname-nic --resource-group $rg --query ipConfigurations[0].privateIpAddress -o tsv) \
 --output none

#Configure NVA:
 routeserver_IP1=$(az network routeserver list --resource-group $rg --query '{IPs:[0].virtualRouterIps[0]}' -o tsv)
 routeserver_IP2=$(az network routeserver list --resource-group $rg --query '{IPs:[0].virtualRouterIps[1]}' -o tsv)

az network routeserver show --name  $hub1name-rs  --resource-group $rg --query 'virtualRouterIps[0]' -o tsv
az network routeserver show --name  $hub1name-rs  --resource-group $rg --query 'virtualRouterIps[1]' -o tsv



Current configuration:
!
!
interface eth0
!
interface lo
!
router bgp 65002
 bgp router-id 10.2.0.36
 network 10.2.0.0/16
 neighbor 172.16.1.4 remote-as 65515
 neighbor 172.16.1.4 ebgp-multihop 255
 neighbor 172.16.1.4 soft-reconfiguration inbound
 neighbor 172.16.1.4 route-map replace_as in
 neighbor 172.16.1.4 route-map replace_as out
 neighbor 192.168.1.68 remote-as 65515
 neighbor 192.168.1.68 soft-reconfiguration inbound
 neighbor 192.168.1.69 remote-as 65515
 neighbor 192.168.1.69 soft-reconfiguration inbound
!
 address-family ipv6
 exit-address-family
 exit
!
route-map replace_as permit 10
 set as-path exclude 65515
!
ip forwarding
ipv6 forwarding
!
line vty
!
end


show ip bgp neighbors 192.168.1.68 received-routes
show ip bgp neighbors 192.168.1.68 advertised-routes
show ip bgp neighbors 192.168.1.69 received-routes
show ip bgp neighbors 192.168.1.69 advertised-routes

show ip bgp neighbors 172.16.1.4 received-routes
show ip bgp neighbors 172.16.1.4 advertised-routes



FRR

Current configuration:
!
frr version 8.3
frr defaults traditional
hostname spoke2-linux-nva1
service integrated-vtysh-config
!
router bgp 65002
 bgp router-id 10.2.0.36
 no bgp ebgp-requires-policy
 neighbor 172.16.1.4 remote-as 65515
 neighbor 172.16.1.4 ebgp-multihop 255
 neighbor 192.168.1.68 remote-as 65515
 neighbor 192.168.1.68 ebgp-multihop 255
 neighbor 192.168.1.69 remote-as 65515
 neighbor 192.168.1.69 ebgp-multihop 255
 !
 address-family ipv4 unicast
  network 10.2.0.0/16
  neighbor 172.16.1.4 soft-reconfiguration inbound
  neighbor 172.16.1.4 route-map replace_as in
  neighbor 172.16.1.4 route-map replace_as out
  neighbor 192.168.1.68 soft-reconfiguration inbound
  neighbor 192.168.1.68 route-map replace_as in
  neighbor 192.168.1.69 soft-reconfiguration inbound
  neighbor 192.168.1.69 route-map replace_as in
 exit-address-family
exit
!
route-map replace_as permit 10
 set as-path replace 65515
exit
!
end