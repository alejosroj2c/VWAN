# Parameters (make changes based on your requirements)
region1=eastus
region2=eastus
region3=eastus

rg=lab-vwan-vrf 
vwanname=vwan-vrf
hub1name=hub1
hub2name=hub2
hub3name=hub3
username=azureuser
password="Msft123Msft123"
vmsize=Standard_DS1_v2

echo Creating branches VNETs...
# create location1 branch virtual network
az network vnet create --address-prefixes 10.110.0.0/16 10.254.0.0/28 -n branch3 -g $rg -l $region2 --subnet-name main --subnet-prefixes 10.110.0.0/24 --output none

echo Creating VMs in both branches...
# create a VM in each branch spoke
az vm create -n branch3VM  -g $rg --image ubuntults --public-ip-sku Standard --size $vmsize -l $region2 --subnet main --vnet-name branch3 --admin-username $username --admin-password $password --nsg "" --no-wait 
az network vnet subnet update --id $(az network vnet list -g $rg --query '[?location==`'$region2'`].{id:subnets[0].id}' -o tsv) --network-security-group default-nsg-$region2 -o none

echo Creating VPN Gateways in both branches...
# create pips for VPN GW's in each branch
az network public-ip create -n branch3-vpngw-pip -g $rg --location $region2 --sku Basic --output none

# Create Subnets and VPN gateways
az network vnet subnet create -g $rg --vnet-name branch3 -n GatewaySubnet --address-prefixes 10.254.0.0/28 --output none
az network vnet-gateway create -n branch3-vpngw --public-ip-addresses branch3-vpngw-pip -g $rg --vnet branch3 --asn 65510 --gateway-type Vpn -l $region2 --sku VpnGw1 --vpn-gateway-generation Generation1 --no-wait 

az vm boot-diagnostics enable --ids $(az vm list -g $rg --query '[].id' -o tsv) -o none 

#Branches VPN Gateways provisioning status
prState=$(az network vnet-gateway show -g $rg -n branch3-vpngw --query provisioningState -o tsv)
if [[ $prState == 'Failed' ]];
then
    echo VPN Gateway is in fail state. Deleting and rebuilding.
    az network vnet-gateway delete -n branch3-vpngw -g $rg
    az network vnet-gateway create -n branch3-vpngw --public-ip-addresses branch3-vpngw-pip -g $rg --vnet branch3 --asn 65510 --gateway-type Vpn -l $region2 --sku VpnGw1 --vpn-gateway-generation Generation1 --no-wait 
    sleep 5
else
    prState=''
    while [[ $prState != 'Succeeded' ]];
    do
        prState=$(az network vnet-gateway show -g $rg -n branch3-vpngw --query provisioningState -o tsv)
        echo "branch3-vpngw provisioningState="$prState
        sleep 5
    done
fi

echo Building VPN connections from VPN Gateways to the respective Branches...
# get bgp peering and public ip addresses of VPN GW and VWAN to set up connection
# Branch 3 and Hub2 VPN Gateway variables
bgp1=$(az network vnet-gateway show -n branch3-vpngw -g $rg --query 'bgpSettings.bgpPeeringAddresses[0].defaultBgpIpAddresses[0]' -o tsv)
pip1=$(az network vnet-gateway show -n branch3-vpngw -g $rg --query 'bgpSettings.bgpPeeringAddresses[0].tunnelIpAddresses[0]' -o tsv)
vwanh2gwbgp1=$(az network vpn-gateway show -n $hub2name-vpngw -g $rg --query 'bgpSettings.bgpPeeringAddresses[0].defaultBgpIpAddresses[0]' -o tsv)
vwanh2gwpip1=$(az network vpn-gateway show -n $hub2name-vpngw  -g $rg --query 'bgpSettings.bgpPeeringAddresses[0].tunnelIpAddresses[0]' -o tsv)
vwanh2gwbgp2=$(az network vpn-gateway show -n $hub2name-vpngw -g $rg --query 'bgpSettings.bgpPeeringAddresses[1].defaultBgpIpAddresses[0]' -o tsv)
vwanh2gwpip2=$(az network vpn-gateway show -n $hub2name-vpngw -g $rg --query 'bgpSettings.bgpPeeringAddresses[1].tunnelIpAddresses[0]' -o tsv)

# create virtual wan vpn site
az network vpn-site create --ip-address $pip1 -n site-branch3 -g $rg --asn 65510 --bgp-peering-address $bgp1 -l $region2 --virtual-wan $vwanname --device-model 'Azure' --device-vendor 'Microsoft' --link-speed '50' --with-link true --output none

# create connection from vpn gw to local gateway and watch for connection succeeded
az network local-gateway create -g $rg -n lng-branch3-$hub2name-gw1 --gateway-ip-address $vwanh2gwpip1 --asn 65515 --bgp-peering-address $vwanh2gwbgp1 -l $region2 --output none
az network vpn-connection create -n branch3-to-$hub2name-gw1 -g $rg -l $region2 --vnet-gateway1 branch3-vpngw --local-gateway2 lng-branch3-$hub2name-gw1 --enable-bgp --shared-key 'abc123' --output none

az network local-gateway create -g $rg -n lng-branch3-$hub2name-gw2 --gateway-ip-address $vwanh2gwpip2 --asn 65515 --bgp-peering-address $vwanh2gwbgp2 -l $region2 --output none
az network vpn-connection create -n branch3-to-$hub2name-gw2 -g $rg -l $region2 --vnet-gateway1 branch3-vpngw --local-gateway2 lng-branch3-$hub2name-gw2 --enable-bgp --shared-key 'abc123' --output none

echo Creating NAT Rules and building S2S VPN connection...
az deployment group create --name vhub-natvpngw-$RANDOM --resource-group $rg \
 --template-uri "https://raw.githubusercontent.com/dmauser/azure-virtualwan/main/vrf-vwan/scripts/vwanvpnnat.json" \
 --parameters location=$region2 \
 --no-wait

#Update Label
default_hub2=$(az network vhub route-table show --name defaultroutetable --vhub-name $hub2name -g $rg --query id -o tsv)
# az network vpn-gateway connection update --gateway-name $hub2name-vpngw -n site-branch3-conn -g $rg --propagated $default_hub2 --label dev shared --output none --no-wait
az network vpn-gateway connection update --gateway-name $hub2name-vpngw -n Connection-site-branch3 -g $rg --propagated $default_hub2 --label dev shared --output none --no-wait
